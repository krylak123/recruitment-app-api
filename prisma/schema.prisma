generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  role      Role     @default(USER)
  email     String   @unique
  hash      String
  firstName String
  lastName  String
  phone     String
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model QuestionClose {
  id        String   @id @default(uuid())
  name      String   @unique
  content   String
  expLevel  ExpLevel
  timeLimit Int
  answers   QuestionCloseAnswer[]

  exams Exam[]

  @@map("closeQuestions")
}

model QuestionCloseAnswer {
  id        String   @id @default(uuid())
  content   String
  isCorrect Boolean

  questionCloseId String
  questionClose QuestionClose @relation(fields: [questionCloseId], references: [id])

  @@map("closeQuestionAnswers")
}

model QuestionOpen {
  id        String   @id @default(uuid())
  name      String   @unique
  content   String
  expLevel  ExpLevel
  timeLimit Int

  exams Exam[]

  @@map("openQuestions")
}

model Exam {
  id String @id @default(uuid())
  name String @unique
  description String
  expLevel  ExpLevel
  createAt  DateTime @default(now())
  timeLimitSummary Int
  questionQuantity Int
  questionOpenList QuestionOpen[]
  questionCloseList QuestionClose[]

  @@map("exams")
}

enum Role {
  USER
  EMPLOYEE
  ADMIN
}

enum ExpLevel {
  ENTRY
  JUNIOR
  MID
  SENIOR
}
